{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/page-2.js","webpack:///./src/components/layout.js","webpack:///./src/images/fcg_logo_corrected.png","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["loader","enqueue","React","createContext","SecondPage","react_default","a","createElement","layout","seo","title","gatsby_link_default","to","Layout","props","_this","_React$Component","call","this","toggleNavbar","bind","_assertThisInitialized","state","collapsed","setState","render","react__WEBPACK_IMPORTED_MODULE_0___default","reactstrap__WEBPACK_IMPORTED_MODULE_2__","dark","style","backgroundColor","expand","reactstrap__WEBPACK_IMPORTED_MODULE_3__","href","className","src","logo","width","height","alt","reactstrap__WEBPACK_IMPORTED_MODULE_4__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_5__","isOpen","navbar","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","nav","inNavbar","reactstrap__WEBPACK_IMPORTED_MODULE_8__","caret","reactstrap__WEBPACK_IMPORTED_MODULE_9__","right","reactstrap__WEBPACK_IMPORTED_MODULE_10__","children","rel","integrity","crossOrigin","Component","NavbarToggler","propTypes","type","PropTypes","string","tag","oneOfType","func","module","exports","__webpack_require__","p","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","m","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-pages-page-2-js-d07ade570bf4af117f3d.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\nimport \"./layout.css\"\nimport \"./bootstrap-social.css\"\n\nimport logo from \"../images/fcg_logo_corrected.png\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n  render() {\n    return (\n      <div>\n      <Navbar dark style={{backgroundColor: '#8d0707'}} expand=\"lg\">\n          <NavbarBrand href=\"/\" className=\"mr-auto\">\n            <img\n              src={logo}\n              width=\"50\"\n              height=\"50\"\n              className=\"d-inline-block align-center\"\n              alt=\"FCG\"\n            />\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n          <Collapse isOpen={!this.state.collapsed} navbar>\n          <ul className=\"navbar-nav mr-auto\">\n\n          </ul>\n            <Nav navbar>\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Our Team\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href=\"/Executive_Board/\">\n                    Executive Board\n                  </DropdownItem>\n                  {/*<DropdownItem href=\"/Founding_Team/\">\n                    Founding Team\n                  </DropdownItem>*/}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              {/*<UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Services\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href=\"/Pro_Bono_Cases/\">\n                    Pro Bono Cases\n                  </DropdownItem>\n                  <DropdownItem href=\"/Case_Studies/\">\n                    Case Studies\n                  </DropdownItem>\n                  <DropdownItem href=\"/Professional_Development/\">\n                    Professional Development\n                  </DropdownItem>\n                  <DropdownItem href=\"/Career_Development/\">\n                    Career Development\n                  </DropdownItem>\n                  <DropdownItem href=\"/Additional_Resources/\">\n                    Additional Resources\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>*/}\n              {/*<NavItem>\n                <NavLink href=\"/Accomplishments/\">Accomplishments</NavLink>\n              </NavItem>*/}\n              {/*<NavItem>\n                <NavLink href=\"/Membership/\">Membership Services</NavLink>\n              </NavItem>*/}\n              {/*<UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  News Media\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem href=\"/World_News/\">\n                    World News\n                  </DropdownItem>\n                  <DropdownItem href=\"/Blog/\">\n                    Blog\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>*/}\n            </Nav>\n          </Collapse>\n        </Navbar>\n        {this.props.children}\n\n         <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossOrigin=\"anonymous\"/>\n      </div>\n    );\n  }\n}\n\nNavbarToggler.propTypes = {\n  type: PropTypes.string,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  // pass in custom element to use\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout;\n","module.exports = __webpack_public_path__ + \"static/fcg_logo_corrected-817242e8f3d46fa388e390b5259a51bf.png\";","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}